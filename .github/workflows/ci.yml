name: .NET CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'
      
      # Optionally, clear any previous build files.
      - name: Clean
        run: dotnet clean WebApplication1Test/WebApplication1Test.csproj -c Release
      
      # Restore dependencies.
      - name: Restore dependencies
        run: dotnet restore WebApplication1Test/WebApplication1Test.csproj
      
      # Build the project.
      - name: Build
        run: dotnet build WebApplication1Test/WebApplication1Test.csproj --no-restore -c Release
      
      # Run tests, ensure to include --logger to get the test results logs.
      - name: Test
        run: dotnet test WebApplication1Test/WebApplication1Test.csproj --no-build --verbosity normal --logger "trx"
      
      # Publish the application.
      - name: Publish
        run: dotnet publish WebApplication1Test/WebApplication1Test.csproj --no-build -c Release -o publish
      
      # Build Docker image.
      - name: Build Docker image
        run: docker build -t yourappname:$(date +%s) .
      
      # This section is only executed if the workflow is not triggered by a pull request.
      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker image to Docker Hub
        if: github.event_name != 'pull_request'
        run: |
          docker tag yourappname:$(date +%s) ${{ secrets.DOCKER_HUB_USERNAME }}/yourappname:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/yourappname:latest
